package com.unlogical.linked.saving;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;

import com.unlogical.linked.debug.Debug;
import com.unlogical.linked.filesystem.FilePaths;

public class SaveHandler
{
	private static List<SaveState> availableSaveStates = new ArrayList<SaveState>();
	private static SaveState activeSave;

	public static void init()
	{
		fetchSaveStates();
		
		if (availableSaveStates.isEmpty())
		{
			try
			{
				activeSave = SaveState.createDefaultSave();
				activeSave.writeAll();
				availableSaveStates.add(activeSave);
				
				Debug.log("No save states found - using default save state.");
			}
			catch (IOException e)
			{
				Debug.warn("Could not create default save state - FATAL!", e);
			}
		}
		else
		{
			activeSave = availableSaveStates.get(0);
			
			Debug.log("Active save state selected, last accessed on " + new Date(activeSave.getLastAccess()));
		}
	}
	
	public static void fetchSaveStates()
	{
		File folder = new File(FilePaths.SAVES);

		availableSaveStates.clear();

		for (File file : folder.listFiles())
		{
			if (file.isFile() && file.getName().endsWith(".dat"))
			{
				try
				{
					availableSaveStates.add(new SaveState(file));

					Debug.log("SaveState " + file.getName() + " found and read successfully.");
				}
				catch (Throwable e)
				{
					Debug.warn("SaveState " + file.getName() + " in folder " + folder.getPath() + " is invalid.", e);
				}
			}
		}

		Collections.sort(availableSaveStates, new Comparator<SaveState>()
		{
			@Override
			public int compare(SaveState o1, SaveState o2)
			{
				if (o2.getLastAccess() > o1.getLastAccess())
				{
					return 1;
				}
				else if (o2.getLastAccess() < o1.getLastAccess())
				{
					return -1;
				}
				
				return 0;
			}
		});
	}
	
	public static SaveState getActiveSave()
	{
		return activeSave;
	}
	
	public static void saveCurrent() throws IOException
	{
		activeSave.writeAll();
		
		Debug.log("Active save was saved to disk.");
	}
}
